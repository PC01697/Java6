package pc01815.Normal_J6.Entity;
// Generated Jul 17, 2022, 5:56:00 PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;
import lombok.Value;

/**
 * Products generated by hbm2java
 */
@Data
@Entity
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "products", catalog = "normal_j6")
public class Products implements java.io.Serializable {

	private Integer id;
	private Category category;
	private String name;
	private float unitPrice;
	private String image;
	private Date productDate;
	private boolean avaible;
	private int quantity;
	private String description;
	private float discount;
	private int viewCount;
	private boolean special;
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Products() {
	}

	public Products(Category category, String name, float unitPrice, String image, Date productDate, boolean avaible,
			int quantity, String description, float discount, int viewCount, boolean special) {
		this.category = category;
		this.name = name;
		this.unitPrice = unitPrice;
		this.image = image;
		this.productDate = productDate;
		this.avaible = avaible;
		this.quantity = quantity;
		this.description = description;
		this.discount = discount;
		this.viewCount = viewCount;
		this.special = special;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
	
	
	@ManyToOne(fetch = FetchType.EAGER, targetEntity = Category.class)
	@JoinColumn(name = "CategoryId", nullable = true)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "Name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "UnitPrice", nullable = false, precision = 12, scale = 0)
	public float getUnitPrice() {
		return this.unitPrice;
	}

	public void setUnitPrice(float unitPrice) {
		this.unitPrice = unitPrice;
	}

	@Column(name = "Image", nullable = false, length = 50)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "ProductDate", nullable = false, length = 10)
	public Date getProductDate() {
		return this.productDate;
	}

	public void setProductDate(Date productDate) {
		this.productDate = productDate;
	}

	@Column(name = "Avaible", nullable = false)
	public boolean isAvaible() {
		return this.avaible;
	}

	public void setAvaible(boolean avaible) {
		this.avaible = avaible;
	}

	@Column(name = "Quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "Description", nullable = false, length = 5000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Discount", nullable = false, precision = 12, scale = 0)
	public float getDiscount() {
		return this.discount;
	}

	public void setDiscount(float discount) {
		this.discount = discount;
	}

	@Column(name = "ViewCount", nullable = false)
	public int getViewCount() {
		return this.viewCount;
	}

	public void setViewCount(int viewCount) {
		this.viewCount = viewCount;
	}

	@Column(name = "Special", nullable = false)
	public boolean isSpecial() {
		return this.special;
	}

	public void setSpecial(boolean special) {
		this.special = special;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "products")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

}
